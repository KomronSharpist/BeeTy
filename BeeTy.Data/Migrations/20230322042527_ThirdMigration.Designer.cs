// <auto-generated />
using System;
using BeeTy.Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BeeTy.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230322042527_ThirdMigration")]
    partial class ThirdMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BeeTy.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<byte>("StatusType")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId1")
                        .HasColumnType("integer");

                    b.Property<long>("WorkerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("WorkerId1")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.HasIndex("WorkerId1");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BeeTy.Domain.Entities.Plan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("UserId1")
                        .HasColumnType("integer");

                    b.Property<long>("WorkerId")
                        .HasColumnType("bigint");

                    b.Property<int?>("WorkerId1")
                        .HasColumnType("integer");

                    b.Property<byte>("statusType")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("UserId1");

                    b.HasIndex("WorkerId1");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("BeeTy.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeeTy.Domain.Entities.Worker", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("BeeTy.Domain.Entities.Order", b =>
                {
                    b.HasOne("BeeTy.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId1");

                    b.HasOne("BeeTy.Domain.Entities.Worker", "Worker")
                        .WithMany("Orders")
                        .HasForeignKey("WorkerId1");

                    b.Navigation("User");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("BeeTy.Domain.Entities.Plan", b =>
                {
                    b.HasOne("BeeTy.Domain.Entities.User", "User")
                        .WithMany("Plans")
                        .HasForeignKey("UserId1");

                    b.HasOne("BeeTy.Domain.Entities.Worker", "Worker")
                        .WithMany("Plans")
                        .HasForeignKey("WorkerId1");

                    b.Navigation("User");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("BeeTy.Domain.Entities.User", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Plans");
                });

            modelBuilder.Entity("BeeTy.Domain.Entities.Worker", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("Plans");
                });
#pragma warning restore 612, 618
        }
    }
}
